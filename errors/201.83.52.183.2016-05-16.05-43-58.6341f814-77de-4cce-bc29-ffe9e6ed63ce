(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> Invalid tuple size in creation of Decimal from list or tuple.  The list or tuple should have exactly three elements."
p3
sS'layer'
p4
S'/home/www-data/web2py/applications/easypay/controllers/default.py'
p5
sS'code'
p6
S'#from bottle import request, run, post, tob, route\n#from io import BytesIO\n\n\ndef qrcode():\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n@auth.requires_login()\ndef oldnavbar():\n    response.flash = T("Welcome to web2py!")\n    return dict(user=auth.user)\n\n\n@auth.requires_login()\ndef tela_vendedor():\n    import os, requests, json\n    from decimal import Decimal\n    db = DAL(\'sqlite://storage.sqlite\',folder=os.getcwd()+\'/applications/easypay/databases\',auto_import=True)\n    linhas = db(db.produtos.id > 0).select()\n    selector = \'\'\'{"selector": {"_id": {"$gt": null},"timestamp": {"$regex": ".*"}},"fields" : ["canal","status_easypay","figura","quantidade","timestamp", "status_comprador", "status_vendedor", "image_name", "item", "valor","_id"], "sort": [{"timestamp": "desc"}]}\'\'\'\n    z = requests.post("https://rcsousa.cloudant.com/easypay/_find", data=selector)\n    result = json.loads(z.text)\n    docs = []\n    produto = []\n    preco = []\n    _id = []\n    figura = []\n    total = []\n    subtotal = []\n    for x in linhas:\n        produto.append(x.produto)\n        preco.append(x.preco)\n        _id.append(x.id)\n        figura.append(x.figura)\n    for doc in result[\'docs\']:\n        docs.append(doc)\n    for x in docs:\n        for y in x[\'valor\']:\n            subtotal.append(float(y.replace(\',\',\'.\')))\n        subtotal_sum = sum(subtotal)\n        total.append(subtotal_sum)\n        subtotal=[]\n    return dict(docs=zip(docs, round(Decimal(total),2)), total=sum(total), produto=zip(_id, produto, preco,figura), user=auth.user)\n\n@auth.requires_login()\ndef lista_de_produtos():\n    import os\n    db = DAL(\'sqlite://storage.sqlite\',folder=os.getcwd()+\'/applications/easypay/databases\',auto_import=True)\n    linhas = db(db.produtos.id > 0).select()\n    produto = []\n    preco = []\n    _id = []\n    figura = []\n    descricao = []\n    for x in linhas:\n        produto.append(x.produto)\n        preco.append(x.preco)\n        _id.append(x.id)\n        figura.append(x.figura)\n        descricao.append(x.descricao)\n    return dict(produtos=zip(_id, produto, descricao, preco,figura), user=auth.user)\n\n@auth.requires_login()\ndef lista_de_ordens():\n    import os\n    db = DAL(\'sqlite://storage.sqlite\',folder=os.getcwd()+\'/applications/easypay/databases\',auto_import=True)\n    linhas = db(db.ordens.id > 0).select(orderby=~db.ordens.id)\n    produtos = []\n    valor = []\n    _id = []\n    figura = []\n    for x in linhas:\n        produtos.append(x.produtos)\n        valor.append(x.valor)\n        _id.append(x.id)\n        figura.append(x.figura)\n    return dict(produtos=zip(_id, produtos, valor,figura), user=auth.user)\n\n@auth.requires_login()\ndef lista_de_produtos_checkbox():\n    import os\n    db = DAL(\'sqlite://storage.sqlite\',folder=os.getcwd()+\'/applications/easypay/databases\',auto_import=True)\n    linhas = db(db.produtos.id > 0).select()\n    produto = []\n    preco = []\n    _id = []\n    figura = []\n    descricao = []\n    for x in linhas:\n        produto.append(x.produto)\n        preco.append(x.preco)\n        _id.append(x.id)\n        figura.append(x.figura)\n        descricao.append(x.descricao)\n    return dict(produtos=zip(_id, produto, descricao, preco,figura), user=auth.user)\n\n@auth.requires_login()\ndef tela_easypay():\n    import requests,json\n    selector = \'\'\'{"selector": {"_id": {"$gt": null},"timestamp": {"$regex": ".*"}},"fields" : ["canal","status_easypay","figura","quantidade","timestamp", "status_comprador", "status_vendedor", "image_name", "item", "valor","_id"], "sort": [{"timestamp": "desc"}]}\'\'\'\n    z = requests.post("https://rcsousa.cloudant.com/easypay/_find", data=selector)\n    result = json.loads(z.text)\n    docs = []\n    total = []\n    subtotal = []\n    for doc in result[\'docs\']:\n        docs.append(doc)\n    for x in docs:\n        for y in x[\'valor\']:\n            subtotal.append(float(y.replace(\',\',\'.\')))\n        subtotal_sum = sum(subtotal)\n        total.append(subtotal_sum)\n        subtotal=[]\n    return dict(docs=zip(docs,total), total=sum(total), user=auth.user)\n\n@auth.requires_login()\ndef tela_cliente():\n    txid = request.vars.getlist("txid")\n    if not txid:\n        return "Eh preciso informar uma transacao para usar essa funcao"\n    from cloudant.account import Cloudant\n    cloudantDB = "easypay"\n    client = Cloudant("rcsousa", "F@b1m3u@m0r", account="rcsousa")\n    client.connect()\n    db = client[cloudantDB]\n    total = []\n    subtotal = []\n    doc = db[txid[0]]\n    id = doc[\'_id\']\n    item = doc[\'item\']\n    quantidade = doc[\'quantidade\']\n    valor = doc[\'valor\']\n    timestamp = doc[\'timestamp\']\n    figura = doc[\'figura\']\n    result = {"id": id, "item" : item, "quantidade" : quantidade, "valor" : valor, "timestamp" : timestamp, "figura" : figura}\n    for y in valor:\n        subtotal.append(float(y.replace(\',\',\'.\')))\n    subtotal_sum = sum(subtotal)\n    total.append(subtotal_sum)\n    return dict(ordem=result, user=auth.user)\n\ndef tela_qrcode():\n    response.flash = T("Welcome to web2py!")\n    return dict(user=auth.user)\n\ndef tela_qrcode_off():\n    txid = request.vars.getlist("txid")\n    return dict(txid=txid[0], user=auth.user)\n\n@auth.requires_login()\ndef produtos():\n    grid=SQLFORM.grid(db.produtos, user_signature=False, formstyle=\'bootstrap3_stacked\')\n    return locals()\n\n@auth.requires_login()\ndef index():\n    response.flash = T("Welcome to web2py!")\n    return dict(user=auth.user)\n\n@auth.requires_login()\ndef undefined():\n    response.flash = T("Welcome to web2py!")\n    return dict(user=auth.user)\n\n@auth.requires_login()\ndef navbar():\n    response.flash = T("Welcome to web2py!")\n    return dict(user=auth.user)\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\nresponse._vars=response._caller(tela_vendedor)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/www-data/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/home/www-data/web2py/applications/easypay/controllers/default.py", line 188, in <module>\n  File "/home/www-data/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/www-data/web2py/gluon/tools.py", line 3444, in f\n    return action(*a, **b)\n  File "/home/www-data/web2py/applications/easypay/controllers/default.py", line 44, in tela_vendedor\n    return dict(docs=zip(docs, round(Decimal(total),2)), total=sum(total), produto=zip(_id, produto, preco,figura), user=auth.user)\n  File "/usr/lib/python2.7/decimal.py", line 608, in __new__\n    raise ValueError(\'Invalid tuple size in creation of Decimal \'\nValueError: Invalid tuple size in creation of Decimal from list or tuple.  The list or tuple should have exactly three elements.\n'
p11
s.